 chop-chop: load
 chop-chop: loadi
 chop-chop: loadin
 chop-chop: loading
 chop-chop: loading.
 chop-chop: loading..
 chop-chop: loading...
 Grigoriy_Gudimenko: Привет всем!
 Grigoriy_Gudimenko: кто-то может пояснить вот это решение? exec(bytes('ⱰⱭ渪漽数⡮⤰朊椽瑮瀨献汰瑩⤨ㅛ⥝瀊楲瑮木猾浵椨瑮椨㸩湩⡴⥭潦⁲⁩湩渠愩摮琢畲≥牯昢污敳⤢','u16')[2:])
 Grigoriy_Gudimenko: <a rel="nofollow" class="external free" href="https://www.codingame.com/clashofcode/clash/report/1949447437684d68421c4b5fb371c916720019a">https://www.codingame.com/clashofcode/clash/report/1949447437684d68421c4b5fb371c916720019a</a>
 mihei: Grigoriy_Gudimenko строка с исходным кодом (1 символ=1 байт) интерпретируется как utf16 строка на китайском(?) где каждый символ занимает по 4 байта или около того, потом соответственно перекодируется обратно и выполняется, это работает потому, что CG для гольфа считает символы, а не байты
 Grigoriy_Gudimenko: Понятно, большое спасибо за пояснение!
 AlexAkel: ребят подскажите а где можно посмотреть статистику решений по размеру кода?
 Panavia_tornado: code golf в complete?
 AlexAkel: спасибо) да, нашел
 Kairu111: У меня проблема с Заданием Chuck Norris
 Kairu111: Мой код говорит, что&#160;% в двоичном коде это 100101В задание Chuck Norris&#160;% в двоичном коде представлен, как 0100101Интернет говорит, что 00100101, 0100101, 100101 это всё&#160;%
 Kairu111: Я смог решить эту проблему заменив через .replace 100101 на 0100101, но мне все еще интересно, почему так получается
 Dralkcib: там в задании написано, что все символы - 7 бит, поэтому для&#160;% вначале 0 стоит
 Panavia_tornado: 0 бит не используется
