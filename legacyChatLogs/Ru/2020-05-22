 inoryy: так почти все в цсб и уттт гоняют с пре-компилированными бинарниками
 inoryy: даже тулзы есть уже готовые <a rel="nofollow" class="external free" href="https://github.com/Agade09/CG-Send-Binary">https://github.com/Agade09/CG-Send-Binary</a>
 Uljahn: inoryy: подскажи пожалуйста на пальцах, как бинарь из питона запустить?
 Uljahn: такое ощущение, что я упускаю что-то очень простое
 Uljahn: на ум приходит вызов из subprocess, как с командами линукса
 Uljahn: <a rel="nofollow" class="external free" href="http://chat.codingame.com/pastebin/6974879d-908c-49dd-92ab-b934c4ae3f97">http://chat.codingame.com/pastebin/6974879d-908c-49dd-92ab-b934c4ae3f97</a>
 Uljahn: т.е. сохраняем бинарник на диск и вызываем из консоли, не?
 tutubalin: Uljahn профит в том, что все будут думать, что ты на TS что-то быстрое сделал )
 tutubalin: мы когда-то давно на одной олимпиаде рефери-сервак вешали
 Hamibar: а какой профит отправке бинарника? Кроме того, что tutubalin описал.
 tutubalin: была бага в процессорах Intel — одна из инструкций вешала всё нафиг
 tutubalin: мы хотели запустить эту инструкцию беспалевно
 tutubalin: перевели её код в десятичное число, взяли поинтер на это число и запустили как функцию
 tutubalin: а чтоб палева было ещё меньше, использовали баг паскаля, когда то, что выглядит как коментарий, коментарием не является
 TheCrucial: webassembly в плане выделения мемори лучше будет. сам код должен выдавать примерно такой же перфоманс как и js написаный спецом ради скорости, т.е. без фишечек модных, а обычные циклы и подобное. 
 tutubalin: webassemply тоже бинарник требует. хотя вроде не обязательно его загружать извне, можно и в код запечатать
 tutubalin: а asm.js - это чистый js код
 Hamibar: tutubalin баг замаскированный багом. Звучит неплохо. За такое сразу 1е место давать надо)
 tutubalin: а нас чуть не дисквалифицировали ) спасло только то, что нашли причину уже после подведения итогов
